{"version":3,"file":"static/js/383.3954d100.chunk.js","mappings":"uMAuEA,EAhEkB,WAChB,IAKMA,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KACPG,SAAS,YACTE,IAAI,EAAG,4CASZ,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAtBgB,CACpBT,MAAO,GACPE,SAAU,IAqBNL,iBAAkBA,EAClBa,SAZe,SAACC,EAAMC,GAAyB,IAArBC,EAAaD,EAAbC,cAE9BC,QAAQC,IAAIJ,GACZE,GAAc,EAChB,EAQ6BP,UAEvBF,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAAAV,SAAA,EACHF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,QAAOX,SAAC,YACvBC,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CAACC,KAAK,QAAQC,GAAG,QAAQC,KAAK,WACpCd,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CACXD,KAAK,QACLE,UAAU,MACVlB,UAAU,sBAIdD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,WAAUX,SAAC,eAC1BC,EAAAA,EAAAA,KAACW,EAAAA,GAAK,CACJC,KAAK,WACLC,GAAG,WACHC,KAAK,WACLG,aAAa,sBAEfjB,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CACXD,KAAK,WACLE,UAAU,MACVlB,UAAU,sBAIdE,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAAQb,SAAC,iBAI1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,CAAC,2BACNC,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAACC,GAAG,YAAWpB,SAAC,kBAIpD,C","sources":["Auth/LoginPage/LoginPage.jsx"],"sourcesContent":["// LoginPage.jsx\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport './LoginPage.scss';\n\nconst LoginPage = () => {\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string()\n      .required('Required')\n      .min(6, 'Password must be at least 6 characters'),\n  });\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    // AdaugÄƒ logica pentru trimiterea datelor la backend\n    console.log(values);\n    setSubmitting(false);\n  };\n\n  return (\n    <div className=\"login-page\">\n      <h2>Login</h2>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email:</label>\n            <Field type=\"email\" id=\"email\" name=\"email\" />\n            <ErrorMessage\n              name=\"email\"\n              component=\"div\"\n              className=\"error-message\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <Field\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <ErrorMessage\n              name=\"password\"\n              component=\"div\"\n              className=\"error-message\"\n            />\n          </div>\n\n          <button type=\"submit\">Log in</button>\n        </Form>\n      </Formik>\n\n      <div className=\"register-link\">\n        Don't have an account? <Link to=\"/register\">Register</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["validationSchema","Yup","shape","email","required","password","min","_jsxs","className","children","_jsx","Formik","initialValues","onSubmit","values","_ref","setSubmitting","console","log","Form","htmlFor","Field","type","id","name","ErrorMessage","component","autoComplete","Link","to"],"sourceRoot":""}